@model List<Product>

@{
    int currentPage = ViewBag.CurrentPage; int totalPages = ViewBag.TotalPages;
}

<div class="container">
    <div class="row">
        @foreach (var product in Model)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">
                <div class="card" data-id="@product.ProductoID">
                    <img src="@product.ImagenURL" class="card-img-top" alt="@product.Nombre">
                    <div class="card-body">
                        <h5 class="card-title">@product.Nombre</h5>
                        <p class="card-text">@product.Descripcion</p>
                        <p class="card-text"><strong>Precio: $@product.Precio M</strong></p>
                        <button class="btn btn-primary agregar-carrito">
                            Agregar al carrito
                        </button>
                    </div>
                </div>
            </div>
        }
    </div> <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (currentPage > 1)
            {
                <li class="page-item"> <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })" aria-label="Previous"> <span aria-hidden="true">&laquo;</span> </a> </li>
            } @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")"> <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a> </li>
            } @if (currentPage < totalPages)
            {
                <li class="page-item"> <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })" aria-label="Next"> <span aria-hidden="true">&raquo;</span> </a> </li>
            }
        </ul>
    </nav>
</div>
@section Scripts {
    <script>
        // Espera a que el DOM se cargue completamente
        document.addEventListener('DOMContentLoaded', function() {
            // Seleccionamos todos los botones de 'agregar al carrito'
            const botonesAgregarCarrito = document.querySelectorAll('.agregar-carrito');

            // Añadimos el 'eventListener' a cada uno de los botones
            botonesAgregarCarrito.forEach(function(button) {
                button.addEventListener('click', function (e) {
                    // Seleccionamos el contenedor de la tarjeta del producto
                    const productoCard = e.target.closest('.card'); // Utilizamos closest para obtener el contenedor de la tarjeta

                    if (productoCard) {
                        // Obtenemos el nombre, precio y el id del producto
                        const nombre = productoCard.querySelector('.card-title')?.textContent || 'Nombre no disponible';
                        const imagen = productoCard.querySelector('img')?.src || '';
                        const precioText = productoCard.querySelector('.card-text')?.textContent || '';
                        const precio = precioText ? precioText.split('$')[1]?.trim() : '0.00'; // Extraemos el precio y lo limpiamos

                        const product = {
                            imagen: imagen,
                            nombre: nombre,
                            precio: precio,
                            id: productoCard.getAttribute('data-id')
                        };

                        // Enviar el producto al servidor
                        fetch('/Carrito/AgregarProducto', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(product)
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.length === 0) {
                                document.getElementById('carrito').innerHTML = '<p>No hay nada en el carrito</p>';
                            } else {
                                // Código para actualizar el carrito en el DOM con los datos actualizados
                            }
                        });
                    } else {
                        console.error('No se encontró el contenedor del producto.');
                    }
                });
            });
        });
    </script>
}
